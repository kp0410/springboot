package com.ywjs.model.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class WorkingConditionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table WORKINGCONDITION_TBL
     *
     * @mbggenerated Thu Nov 14 18:04:50 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table WORKINGCONDITION_TBL
     *
     * @mbggenerated Thu Nov 14 18:04:50 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table WORKINGCONDITION_TBL
     *
     * @mbggenerated Thu Nov 14 18:04:50 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WORKINGCONDITION_TBL
     *
     * @mbggenerated Thu Nov 14 18:04:50 CST 2019
     */
    public WorkingConditionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WORKINGCONDITION_TBL
     *
     * @mbggenerated Thu Nov 14 18:04:50 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WORKINGCONDITION_TBL
     *
     * @mbggenerated Thu Nov 14 18:04:50 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WORKINGCONDITION_TBL
     *
     * @mbggenerated Thu Nov 14 18:04:50 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WORKINGCONDITION_TBL
     *
     * @mbggenerated Thu Nov 14 18:04:50 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WORKINGCONDITION_TBL
     *
     * @mbggenerated Thu Nov 14 18:04:50 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WORKINGCONDITION_TBL
     *
     * @mbggenerated Thu Nov 14 18:04:50 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WORKINGCONDITION_TBL
     *
     * @mbggenerated Thu Nov 14 18:04:50 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WORKINGCONDITION_TBL
     *
     * @mbggenerated Thu Nov 14 18:04:50 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WORKINGCONDITION_TBL
     *
     * @mbggenerated Thu Nov 14 18:04:50 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WORKINGCONDITION_TBL
     *
     * @mbggenerated Thu Nov 14 18:04:50 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table WORKINGCONDITION_TBL
     *
     * @mbggenerated Thu Nov 14 18:04:50 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andWorkidWorkIsNull() {
            addCriterion("WORKID_WORK is null");
            return (Criteria) this;
        }

        public Criteria andWorkidWorkIsNotNull() {
            addCriterion("WORKID_WORK is not null");
            return (Criteria) this;
        }

        public Criteria andWorkidWorkEqualTo(Integer value) {
            addCriterion("WORKID_WORK =", value, "workidWork");
            return (Criteria) this;
        }

        public Criteria andWorkidWorkNotEqualTo(Integer value) {
            addCriterion("WORKID_WORK <>", value, "workidWork");
            return (Criteria) this;
        }

        public Criteria andWorkidWorkGreaterThan(Integer value) {
            addCriterion("WORKID_WORK >", value, "workidWork");
            return (Criteria) this;
        }

        public Criteria andWorkidWorkGreaterThanOrEqualTo(Integer value) {
            addCriterion("WORKID_WORK >=", value, "workidWork");
            return (Criteria) this;
        }

        public Criteria andWorkidWorkLessThan(Integer value) {
            addCriterion("WORKID_WORK <", value, "workidWork");
            return (Criteria) this;
        }

        public Criteria andWorkidWorkLessThanOrEqualTo(Integer value) {
            addCriterion("WORKID_WORK <=", value, "workidWork");
            return (Criteria) this;
        }

        public Criteria andWorkidWorkIn(List<Integer> values) {
            addCriterion("WORKID_WORK in", values, "workidWork");
            return (Criteria) this;
        }

        public Criteria andWorkidWorkNotIn(List<Integer> values) {
            addCriterion("WORKID_WORK not in", values, "workidWork");
            return (Criteria) this;
        }

        public Criteria andWorkidWorkBetween(Integer value1, Integer value2) {
            addCriterion("WORKID_WORK between", value1, value2, "workidWork");
            return (Criteria) this;
        }

        public Criteria andWorkidWorkNotBetween(Integer value1, Integer value2) {
            addCriterion("WORKID_WORK not between", value1, value2, "workidWork");
            return (Criteria) this;
        }

        public Criteria andWorkusernameWorkIsNull() {
            addCriterion("WORKUSERNAME_WORK is null");
            return (Criteria) this;
        }

        public Criteria andWorkusernameWorkIsNotNull() {
            addCriterion("WORKUSERNAME_WORK is not null");
            return (Criteria) this;
        }

        public Criteria andWorkusernameWorkEqualTo(String value) {
            addCriterion("WORKUSERNAME_WORK =", value, "workusernameWork");
            return (Criteria) this;
        }

        public Criteria andWorkusernameWorkNotEqualTo(String value) {
            addCriterion("WORKUSERNAME_WORK <>", value, "workusernameWork");
            return (Criteria) this;
        }

        public Criteria andWorkusernameWorkGreaterThan(String value) {
            addCriterion("WORKUSERNAME_WORK >", value, "workusernameWork");
            return (Criteria) this;
        }

        public Criteria andWorkusernameWorkGreaterThanOrEqualTo(String value) {
            addCriterion("WORKUSERNAME_WORK >=", value, "workusernameWork");
            return (Criteria) this;
        }

        public Criteria andWorkusernameWorkLessThan(String value) {
            addCriterion("WORKUSERNAME_WORK <", value, "workusernameWork");
            return (Criteria) this;
        }

        public Criteria andWorkusernameWorkLessThanOrEqualTo(String value) {
            addCriterion("WORKUSERNAME_WORK <=", value, "workusernameWork");
            return (Criteria) this;
        }

        public Criteria andWorkusernameWorkLike(String value) {
            addCriterion("WORKUSERNAME_WORK like", value, "workusernameWork");
            return (Criteria) this;
        }

        public Criteria andWorkusernameWorkNotLike(String value) {
            addCriterion("WORKUSERNAME_WORK not like", value, "workusernameWork");
            return (Criteria) this;
        }

        public Criteria andWorkusernameWorkIn(List<String> values) {
            addCriterion("WORKUSERNAME_WORK in", values, "workusernameWork");
            return (Criteria) this;
        }

        public Criteria andWorkusernameWorkNotIn(List<String> values) {
            addCriterion("WORKUSERNAME_WORK not in", values, "workusernameWork");
            return (Criteria) this;
        }

        public Criteria andWorkusernameWorkBetween(String value1, String value2) {
            addCriterion("WORKUSERNAME_WORK between", value1, value2, "workusernameWork");
            return (Criteria) this;
        }

        public Criteria andWorkusernameWorkNotBetween(String value1, String value2) {
            addCriterion("WORKUSERNAME_WORK not between", value1, value2, "workusernameWork");
            return (Criteria) this;
        }

        public Criteria andCreatedateWorkIsNull() {
            addCriterion("CREATEDATE_WORK is null");
            return (Criteria) this;
        }

        public Criteria andCreatedateWorkIsNotNull() {
            addCriterion("CREATEDATE_WORK is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedateWorkEqualTo(Date value) {
            addCriterion("CREATEDATE_WORK =", value, "createdateWork");
            return (Criteria) this;
        }

        public Criteria andCreatedateWorkNotEqualTo(Date value) {
            addCriterion("CREATEDATE_WORK <>", value, "createdateWork");
            return (Criteria) this;
        }

        public Criteria andCreatedateWorkGreaterThan(Date value) {
            addCriterion("CREATEDATE_WORK >", value, "createdateWork");
            return (Criteria) this;
        }

        public Criteria andCreatedateWorkGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATEDATE_WORK >=", value, "createdateWork");
            return (Criteria) this;
        }

        public Criteria andCreatedateWorkLessThan(Date value) {
            addCriterion("CREATEDATE_WORK <", value, "createdateWork");
            return (Criteria) this;
        }

        public Criteria andCreatedateWorkLessThanOrEqualTo(Date value) {
            addCriterion("CREATEDATE_WORK <=", value, "createdateWork");
            return (Criteria) this;
        }

        public Criteria andCreatedateWorkIn(List<Date> values) {
            addCriterion("CREATEDATE_WORK in", values, "createdateWork");
            return (Criteria) this;
        }

        public Criteria andCreatedateWorkNotIn(List<Date> values) {
            addCriterion("CREATEDATE_WORK not in", values, "createdateWork");
            return (Criteria) this;
        }

        public Criteria andCreatedateWorkBetween(Date value1, Date value2) {
            addCriterion("CREATEDATE_WORK between", value1, value2, "createdateWork");
            return (Criteria) this;
        }

        public Criteria andCreatedateWorkNotBetween(Date value1, Date value2) {
            addCriterion("CREATEDATE_WORK not between", value1, value2, "createdateWork");
            return (Criteria) this;
        }

        public Criteria andWorktypeWorkIsNull() {
            addCriterion("WORKTYPE_WORK is null");
            return (Criteria) this;
        }

        public Criteria andWorktypeWorkIsNotNull() {
            addCriterion("WORKTYPE_WORK is not null");
            return (Criteria) this;
        }

        public Criteria andWorktypeWorkEqualTo(Integer value) {
            addCriterion("WORKTYPE_WORK =", value, "worktypeWork");
            return (Criteria) this;
        }

        public Criteria andWorktypeWorkNotEqualTo(Integer value) {
            addCriterion("WORKTYPE_WORK <>", value, "worktypeWork");
            return (Criteria) this;
        }

        public Criteria andWorktypeWorkGreaterThan(Integer value) {
            addCriterion("WORKTYPE_WORK >", value, "worktypeWork");
            return (Criteria) this;
        }

        public Criteria andWorktypeWorkGreaterThanOrEqualTo(Integer value) {
            addCriterion("WORKTYPE_WORK >=", value, "worktypeWork");
            return (Criteria) this;
        }

        public Criteria andWorktypeWorkLessThan(Integer value) {
            addCriterion("WORKTYPE_WORK <", value, "worktypeWork");
            return (Criteria) this;
        }

        public Criteria andWorktypeWorkLessThanOrEqualTo(Integer value) {
            addCriterion("WORKTYPE_WORK <=", value, "worktypeWork");
            return (Criteria) this;
        }

        public Criteria andWorktypeWorkIn(List<Integer> values) {
            addCriterion("WORKTYPE_WORK in", values, "worktypeWork");
            return (Criteria) this;
        }

        public Criteria andWorktypeWorkNotIn(List<Integer> values) {
            addCriterion("WORKTYPE_WORK not in", values, "worktypeWork");
            return (Criteria) this;
        }

        public Criteria andWorktypeWorkBetween(Integer value1, Integer value2) {
            addCriterion("WORKTYPE_WORK between", value1, value2, "worktypeWork");
            return (Criteria) this;
        }

        public Criteria andWorktypeWorkNotBetween(Integer value1, Integer value2) {
            addCriterion("WORKTYPE_WORK not between", value1, value2, "worktypeWork");
            return (Criteria) this;
        }

        public Criteria andIsacquiesceWorkIsNull() {
            addCriterion("ISACQUIESCE_WORK is null");
            return (Criteria) this;
        }

        public Criteria andIsacquiesceWorkIsNotNull() {
            addCriterion("ISACQUIESCE_WORK is not null");
            return (Criteria) this;
        }

        public Criteria andIsacquiesceWorkEqualTo(Integer value) {
            addCriterion("ISACQUIESCE_WORK =", value, "isacquiesceWork");
            return (Criteria) this;
        }

        public Criteria andIsacquiesceWorkNotEqualTo(Integer value) {
            addCriterion("ISACQUIESCE_WORK <>", value, "isacquiesceWork");
            return (Criteria) this;
        }

        public Criteria andIsacquiesceWorkGreaterThan(Integer value) {
            addCriterion("ISACQUIESCE_WORK >", value, "isacquiesceWork");
            return (Criteria) this;
        }

        public Criteria andIsacquiesceWorkGreaterThanOrEqualTo(Integer value) {
            addCriterion("ISACQUIESCE_WORK >=", value, "isacquiesceWork");
            return (Criteria) this;
        }

        public Criteria andIsacquiesceWorkLessThan(Integer value) {
            addCriterion("ISACQUIESCE_WORK <", value, "isacquiesceWork");
            return (Criteria) this;
        }

        public Criteria andIsacquiesceWorkLessThanOrEqualTo(Integer value) {
            addCriterion("ISACQUIESCE_WORK <=", value, "isacquiesceWork");
            return (Criteria) this;
        }

        public Criteria andIsacquiesceWorkIn(List<Integer> values) {
            addCriterion("ISACQUIESCE_WORK in", values, "isacquiesceWork");
            return (Criteria) this;
        }

        public Criteria andIsacquiesceWorkNotIn(List<Integer> values) {
            addCriterion("ISACQUIESCE_WORK not in", values, "isacquiesceWork");
            return (Criteria) this;
        }

        public Criteria andIsacquiesceWorkBetween(Integer value1, Integer value2) {
            addCriterion("ISACQUIESCE_WORK between", value1, value2, "isacquiesceWork");
            return (Criteria) this;
        }

        public Criteria andIsacquiesceWorkNotBetween(Integer value1, Integer value2) {
            addCriterion("ISACQUIESCE_WORK not between", value1, value2, "isacquiesceWork");
            return (Criteria) this;
        }

        public Criteria andRemarkProaffIsNull() {
            addCriterion("REMARK_PROAFF is null");
            return (Criteria) this;
        }

        public Criteria andRemarkProaffIsNotNull() {
            addCriterion("REMARK_PROAFF is not null");
            return (Criteria) this;
        }

        public Criteria andRemarkProaffEqualTo(String value) {
            addCriterion("REMARK_PROAFF =", value, "remarkProaff");
            return (Criteria) this;
        }

        public Criteria andRemarkProaffNotEqualTo(String value) {
            addCriterion("REMARK_PROAFF <>", value, "remarkProaff");
            return (Criteria) this;
        }

        public Criteria andRemarkProaffGreaterThan(String value) {
            addCriterion("REMARK_PROAFF >", value, "remarkProaff");
            return (Criteria) this;
        }

        public Criteria andRemarkProaffGreaterThanOrEqualTo(String value) {
            addCriterion("REMARK_PROAFF >=", value, "remarkProaff");
            return (Criteria) this;
        }

        public Criteria andRemarkProaffLessThan(String value) {
            addCriterion("REMARK_PROAFF <", value, "remarkProaff");
            return (Criteria) this;
        }

        public Criteria andRemarkProaffLessThanOrEqualTo(String value) {
            addCriterion("REMARK_PROAFF <=", value, "remarkProaff");
            return (Criteria) this;
        }

        public Criteria andRemarkProaffLike(String value) {
            addCriterion("REMARK_PROAFF like", value, "remarkProaff");
            return (Criteria) this;
        }

        public Criteria andRemarkProaffNotLike(String value) {
            addCriterion("REMARK_PROAFF not like", value, "remarkProaff");
            return (Criteria) this;
        }

        public Criteria andRemarkProaffIn(List<String> values) {
            addCriterion("REMARK_PROAFF in", values, "remarkProaff");
            return (Criteria) this;
        }

        public Criteria andRemarkProaffNotIn(List<String> values) {
            addCriterion("REMARK_PROAFF not in", values, "remarkProaff");
            return (Criteria) this;
        }

        public Criteria andRemarkProaffBetween(String value1, String value2) {
            addCriterion("REMARK_PROAFF between", value1, value2, "remarkProaff");
            return (Criteria) this;
        }

        public Criteria andRemarkProaffNotBetween(String value1, String value2) {
            addCriterion("REMARK_PROAFF not between", value1, value2, "remarkProaff");
            return (Criteria) this;
        }

        public Criteria andProjectidProaffIsNull() {
            addCriterion("PROJECTID_PROAFF is null");
            return (Criteria) this;
        }

        public Criteria andProjectidProaffIsNotNull() {
            addCriterion("PROJECTID_PROAFF is not null");
            return (Criteria) this;
        }

        public Criteria andProjectidProaffEqualTo(Long value) {
            addCriterion("PROJECTID_PROAFF =", value, "projectidProaff");
            return (Criteria) this;
        }

        public Criteria andProjectidProaffNotEqualTo(Integer value) {
            addCriterion("PROJECTID_PROAFF <>", value, "projectidProaff");
            return (Criteria) this;
        }

        public Criteria andProjectidProaffGreaterThan(Integer value) {
            addCriterion("PROJECTID_PROAFF >", value, "projectidProaff");
            return (Criteria) this;
        }

        public Criteria andProjectidProaffGreaterThanOrEqualTo(Integer value) {
            addCriterion("PROJECTID_PROAFF >=", value, "projectidProaff");
            return (Criteria) this;
        }

        public Criteria andProjectidProaffLessThan(Integer value) {
            addCriterion("PROJECTID_PROAFF <", value, "projectidProaff");
            return (Criteria) this;
        }

        public Criteria andProjectidProaffLessThanOrEqualTo(Integer value) {
            addCriterion("PROJECTID_PROAFF <=", value, "projectidProaff");
            return (Criteria) this;
        }

        public Criteria andProjectidProaffIn(List<Integer> values) {
            addCriterion("PROJECTID_PROAFF in", values, "projectidProaff");
            return (Criteria) this;
        }

        public Criteria andProjectidProaffNotIn(List<Integer> values) {
            addCriterion("PROJECTID_PROAFF not in", values, "projectidProaff");
            return (Criteria) this;
        }

        public Criteria andProjectidProaffBetween(Integer value1, Integer value2) {
            addCriterion("PROJECTID_PROAFF between", value1, value2, "projectidProaff");
            return (Criteria) this;
        }

        public Criteria andProjectidProaffNotBetween(Integer value1, Integer value2) {
            addCriterion("PROJECTID_PROAFF not between", value1, value2, "projectidProaff");
            return (Criteria) this;
        }

        public Criteria andWorknameWorkIsNull() {
            addCriterion("WORKNAME_WORK is null");
            return (Criteria) this;
        }

        public Criteria andWorknameWorkIsNotNull() {
            addCriterion("WORKNAME_WORK is not null");
            return (Criteria) this;
        }

        public Criteria andWorknameWorkEqualTo(String value) {
            addCriterion("WORKNAME_WORK =", value, "worknameWork");
            return (Criteria) this;
        }

        public Criteria andWorknameWorkNotEqualTo(String value) {
            addCriterion("WORKNAME_WORK <>", value, "worknameWork");
            return (Criteria) this;
        }

        public Criteria andWorknameWorkGreaterThan(String value) {
            addCriterion("WORKNAME_WORK >", value, "worknameWork");
            return (Criteria) this;
        }

        public Criteria andWorknameWorkGreaterThanOrEqualTo(String value) {
            addCriterion("WORKNAME_WORK >=", value, "worknameWork");
            return (Criteria) this;
        }

        public Criteria andWorknameWorkLessThan(String value) {
            addCriterion("WORKNAME_WORK <", value, "worknameWork");
            return (Criteria) this;
        }

        public Criteria andWorknameWorkLessThanOrEqualTo(String value) {
            addCriterion("WORKNAME_WORK <=", value, "worknameWork");
            return (Criteria) this;
        }

        public Criteria andWorknameWorkLike(String value) {
            addCriterion("WORKNAME_WORK like", value, "worknameWork");
            return (Criteria) this;
        }

        public Criteria andWorknameWorkNotLike(String value) {
            addCriterion("WORKNAME_WORK not like", value, "worknameWork");
            return (Criteria) this;
        }

        public Criteria andWorknameWorkIn(List<String> values) {
            addCriterion("WORKNAME_WORK in", values, "worknameWork");
            return (Criteria) this;
        }

        public Criteria andWorknameWorkNotIn(List<String> values) {
            addCriterion("WORKNAME_WORK not in", values, "worknameWork");
            return (Criteria) this;
        }

        public Criteria andWorknameWorkBetween(String value1, String value2) {
            addCriterion("WORKNAME_WORK between", value1, value2, "worknameWork");
            return (Criteria) this;
        }

        public Criteria andWorknameWorkNotBetween(String value1, String value2) {
            addCriterion("WORKNAME_WORK not between", value1, value2, "worknameWork");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table WORKINGCONDITION_TBL
     *
     * @mbggenerated do_not_delete_during_merge Thu Nov 14 18:04:50 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table WORKINGCONDITION_TBL
     *
     * @mbggenerated Thu Nov 14 18:04:50 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}