package com.ywjs.model.entity;

import java.util.ArrayList;
import java.util.List;

public class ElementNodeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ELEMENT_NODE_TBL
     *
     * @mbggenerated Wed Nov 13 18:21:09 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ELEMENT_NODE_TBL
     *
     * @mbggenerated Wed Nov 13 18:21:09 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ELEMENT_NODE_TBL
     *
     * @mbggenerated Wed Nov 13 18:21:09 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ELEMENT_NODE_TBL
     *
     * @mbggenerated Wed Nov 13 18:21:09 CST 2019
     */
    public ElementNodeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ELEMENT_NODE_TBL
     *
     * @mbggenerated Wed Nov 13 18:21:09 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ELEMENT_NODE_TBL
     *
     * @mbggenerated Wed Nov 13 18:21:09 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ELEMENT_NODE_TBL
     *
     * @mbggenerated Wed Nov 13 18:21:09 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ELEMENT_NODE_TBL
     *
     * @mbggenerated Wed Nov 13 18:21:09 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ELEMENT_NODE_TBL
     *
     * @mbggenerated Wed Nov 13 18:21:09 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ELEMENT_NODE_TBL
     *
     * @mbggenerated Wed Nov 13 18:21:09 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ELEMENT_NODE_TBL
     *
     * @mbggenerated Wed Nov 13 18:21:09 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ELEMENT_NODE_TBL
     *
     * @mbggenerated Wed Nov 13 18:21:09 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ELEMENT_NODE_TBL
     *
     * @mbggenerated Wed Nov 13 18:21:09 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ELEMENT_NODE_TBL
     *
     * @mbggenerated Wed Nov 13 18:21:09 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ELEMENT_NODE_TBL
     *
     * @mbggenerated Wed Nov 13 18:21:09 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andNodeidNdlIsNull() {
            addCriterion("NODEID_NDL is null");
            return (Criteria) this;
        }

        public Criteria andNodeidNdlIsNotNull() {
            addCriterion("NODEID_NDL is not null");
            return (Criteria) this;
        }

        public Criteria andNodeidNdlEqualTo(Integer value) {
            addCriterion("NODEID_NDL =", value, "nodeidNdl");
            return (Criteria) this;
        }

        public Criteria andNodeidNdlNotEqualTo(Integer value) {
            addCriterion("NODEID_NDL <>", value, "nodeidNdl");
            return (Criteria) this;
        }

        public Criteria andNodeidNdlGreaterThan(Integer value) {
            addCriterion("NODEID_NDL >", value, "nodeidNdl");
            return (Criteria) this;
        }

        public Criteria andNodeidNdlGreaterThanOrEqualTo(Integer value) {
            addCriterion("NODEID_NDL >=", value, "nodeidNdl");
            return (Criteria) this;
        }

        public Criteria andNodeidNdlLessThan(Integer value) {
            addCriterion("NODEID_NDL <", value, "nodeidNdl");
            return (Criteria) this;
        }

        public Criteria andNodeidNdlLessThanOrEqualTo(Integer value) {
            addCriterion("NODEID_NDL <=", value, "nodeidNdl");
            return (Criteria) this;
        }

        public Criteria andNodeidNdlIn(List<Integer> values) {
            addCriterion("NODEID_NDL in", values, "nodeidNdl");
            return (Criteria) this;
        }

        public Criteria andNodeidNdlNotIn(List<Integer> values) {
            addCriterion("NODEID_NDL not in", values, "nodeidNdl");
            return (Criteria) this;
        }

        public Criteria andNodeidNdlBetween(Integer value1, Integer value2) {
            addCriterion("NODEID_NDL between", value1, value2, "nodeidNdl");
            return (Criteria) this;
        }

        public Criteria andNodeidNdlNotBetween(Integer value1, Integer value2) {
            addCriterion("NODEID_NDL not between", value1, value2, "nodeidNdl");
            return (Criteria) this;
        }

        public Criteria andNodexNdlIsNull() {
            addCriterion("NODEX_NDL is null");
            return (Criteria) this;
        }

        public Criteria andNodexNdlIsNotNull() {
            addCriterion("NODEX_NDL is not null");
            return (Criteria) this;
        }

        public Criteria andNodexNdlEqualTo(Integer value) {
            addCriterion("NODEX_NDL =", value, "nodexNdl");
            return (Criteria) this;
        }

        public Criteria andNodexNdlNotEqualTo(Integer value) {
            addCriterion("NODEX_NDL <>", value, "nodexNdl");
            return (Criteria) this;
        }

        public Criteria andNodexNdlGreaterThan(Integer value) {
            addCriterion("NODEX_NDL >", value, "nodexNdl");
            return (Criteria) this;
        }

        public Criteria andNodexNdlGreaterThanOrEqualTo(Integer value) {
            addCriterion("NODEX_NDL >=", value, "nodexNdl");
            return (Criteria) this;
        }

        public Criteria andNodexNdlLessThan(Integer value) {
            addCriterion("NODEX_NDL <", value, "nodexNdl");
            return (Criteria) this;
        }

        public Criteria andNodexNdlLessThanOrEqualTo(Integer value) {
            addCriterion("NODEX_NDL <=", value, "nodexNdl");
            return (Criteria) this;
        }

        public Criteria andNodexNdlIn(List<Integer> values) {
            addCriterion("NODEX_NDL in", values, "nodexNdl");
            return (Criteria) this;
        }

        public Criteria andNodexNdlNotIn(List<Integer> values) {
            addCriterion("NODEX_NDL not in", values, "nodexNdl");
            return (Criteria) this;
        }

        public Criteria andNodexNdlBetween(Integer value1, Integer value2) {
            addCriterion("NODEX_NDL between", value1, value2, "nodexNdl");
            return (Criteria) this;
        }

        public Criteria andNodexNdlNotBetween(Integer value1, Integer value2) {
            addCriterion("NODEX_NDL not between", value1, value2, "nodexNdl");
            return (Criteria) this;
        }

        public Criteria andNodeyNdlIsNull() {
            addCriterion("NODEY_NDL is null");
            return (Criteria) this;
        }

        public Criteria andNodeyNdlIsNotNull() {
            addCriterion("NODEY_NDL is not null");
            return (Criteria) this;
        }

        public Criteria andNodeyNdlEqualTo(Integer value) {
            addCriterion("NODEY_NDL =", value, "nodeyNdl");
            return (Criteria) this;
        }

        public Criteria andNodeyNdlNotEqualTo(Integer value) {
            addCriterion("NODEY_NDL <>", value, "nodeyNdl");
            return (Criteria) this;
        }

        public Criteria andNodeyNdlGreaterThan(Integer value) {
            addCriterion("NODEY_NDL >", value, "nodeyNdl");
            return (Criteria) this;
        }

        public Criteria andNodeyNdlGreaterThanOrEqualTo(Integer value) {
            addCriterion("NODEY_NDL >=", value, "nodeyNdl");
            return (Criteria) this;
        }

        public Criteria andNodeyNdlLessThan(Integer value) {
            addCriterion("NODEY_NDL <", value, "nodeyNdl");
            return (Criteria) this;
        }

        public Criteria andNodeyNdlLessThanOrEqualTo(Integer value) {
            addCriterion("NODEY_NDL <=", value, "nodeyNdl");
            return (Criteria) this;
        }

        public Criteria andNodeyNdlIn(List<Integer> values) {
            addCriterion("NODEY_NDL in", values, "nodeyNdl");
            return (Criteria) this;
        }

        public Criteria andNodeyNdlNotIn(List<Integer> values) {
            addCriterion("NODEY_NDL not in", values, "nodeyNdl");
            return (Criteria) this;
        }

        public Criteria andNodeyNdlBetween(Integer value1, Integer value2) {
            addCriterion("NODEY_NDL between", value1, value2, "nodeyNdl");
            return (Criteria) this;
        }

        public Criteria andNodeyNdlNotBetween(Integer value1, Integer value2) {
            addCriterion("NODEY_NDL not between", value1, value2, "nodeyNdl");
            return (Criteria) this;
        }

        public Criteria andProjectidProaffIsNull() {
            addCriterion("PROJECTID_PROAFF is null");
            return (Criteria) this;
        }

        public Criteria andProjectidProaffIsNotNull() {
            addCriterion("PROJECTID_PROAFF is not null");
            return (Criteria) this;
        }

        public Criteria andProjectidProaffEqualTo(Long value) {
            addCriterion("PROJECTID_PROAFF =", value, "projectidProaff");
            return (Criteria) this;
        }

        public Criteria andProjectidProaffNotEqualTo(Integer value) {
            addCriterion("PROJECTID_PROAFF <>", value, "projectidProaff");
            return (Criteria) this;
        }

        public Criteria andProjectidProaffGreaterThan(Integer value) {
            addCriterion("PROJECTID_PROAFF >", value, "projectidProaff");
            return (Criteria) this;
        }

        public Criteria andProjectidProaffGreaterThanOrEqualTo(Integer value) {
            addCriterion("PROJECTID_PROAFF >=", value, "projectidProaff");
            return (Criteria) this;
        }

        public Criteria andProjectidProaffLessThan(Integer value) {
            addCriterion("PROJECTID_PROAFF <", value, "projectidProaff");
            return (Criteria) this;
        }

        public Criteria andProjectidProaffLessThanOrEqualTo(Integer value) {
            addCriterion("PROJECTID_PROAFF <=", value, "projectidProaff");
            return (Criteria) this;
        }

        public Criteria andProjectidProaffIn(List<Integer> values) {
            addCriterion("PROJECTID_PROAFF in", values, "projectidProaff");
            return (Criteria) this;
        }

        public Criteria andProjectidProaffNotIn(List<Integer> values) {
            addCriterion("PROJECTID_PROAFF not in", values, "projectidProaff");
            return (Criteria) this;
        }

        public Criteria andProjectidProaffBetween(Integer value1, Integer value2) {
            addCriterion("PROJECTID_PROAFF between", value1, value2, "projectidProaff");
            return (Criteria) this;
        }

        public Criteria andProjectidProaffNotBetween(Integer value1, Integer value2) {
            addCriterion("PROJECTID_PROAFF not between", value1, value2, "projectidProaff");
            return (Criteria) this;
        }

        public Criteria andLayeridEleIsNull() {
            addCriterion("LAYERID_ELE is null");
            return (Criteria) this;
        }

        public Criteria andLayeridEleIsNotNull() {
            addCriterion("LAYERID_ELE is not null");
            return (Criteria) this;
        }

        public Criteria andLayeridEleEqualTo(Integer value) {
            addCriterion("LAYERID_ELE =", value, "layeridEle");
            return (Criteria) this;
        }

        public Criteria andLayeridEleNotEqualTo(Integer value) {
            addCriterion("LAYERID_ELE <>", value, "layeridEle");
            return (Criteria) this;
        }

        public Criteria andLayeridEleGreaterThan(Integer value) {
            addCriterion("LAYERID_ELE >", value, "layeridEle");
            return (Criteria) this;
        }

        public Criteria andLayeridEleGreaterThanOrEqualTo(Integer value) {
            addCriterion("LAYERID_ELE >=", value, "layeridEle");
            return (Criteria) this;
        }

        public Criteria andLayeridEleLessThan(Integer value) {
            addCriterion("LAYERID_ELE <", value, "layeridEle");
            return (Criteria) this;
        }

        public Criteria andLayeridEleLessThanOrEqualTo(Integer value) {
            addCriterion("LAYERID_ELE <=", value, "layeridEle");
            return (Criteria) this;
        }

        public Criteria andLayeridEleIn(List<Integer> values) {
            addCriterion("LAYERID_ELE in", values, "layeridEle");
            return (Criteria) this;
        }

        public Criteria andLayeridEleNotIn(List<Integer> values) {
            addCriterion("LAYERID_ELE not in", values, "layeridEle");
            return (Criteria) this;
        }

        public Criteria andLayeridEleBetween(Integer value1, Integer value2) {
            addCriterion("LAYERID_ELE between", value1, value2, "layeridEle");
            return (Criteria) this;
        }

        public Criteria andLayeridEleNotBetween(Integer value1, Integer value2) {
            addCriterion("LAYERID_ELE not between", value1, value2, "layeridEle");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ELEMENT_NODE_TBL
     *
     * @mbggenerated do_not_delete_during_merge Wed Nov 13 18:21:09 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ELEMENT_NODE_TBL
     *
     * @mbggenerated Wed Nov 13 18:21:09 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}