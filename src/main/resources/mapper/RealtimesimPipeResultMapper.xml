<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ywjs.mapper.RealtimesimPipeResultMapper" >
  <resultMap id="BaseResultMap" type="com.ywjs.model.entity.RealtimesimPipeResult" >
    <result column="SIMULATIONID_REALSIMALL" property="simulationidRealsimall" jdbcType="DECIMAL" />
    <result column="PIPENAME_SIMPIPERES" property="pipenameSimpiperes" jdbcType="VARCHAR" />
    <result column="PIPEID_SIMPIPERES" property="pipeidSimpiperes" jdbcType="VARCHAR" />
    <result column="MILEAGE_SIMPIPERES" property="mileageSimpiperes" jdbcType="DECIMAL" />
    <result column="ELEVATION_SIMPIPERES" property="elevationSimpiperes" jdbcType="DECIMAL" />
    <result column="TEMPERATURE_SIMPIPERES" property="temperatureSimpiperes" jdbcType="DECIMAL" />
    <result column="PRESSURE_SIMPIPERES" property="pressureSimpiperes" jdbcType="DECIMAL" />
    <result column="FLOW_SIMPIPERES" property="flowSimpiperes" jdbcType="DECIMAL" />
    <result column="LIQUID_SIMPIPERES" property="liquidSimpiperes" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    SIMULATIONID_REALSIMALL, PIPENAME_SIMPIPERES, PIPEID_SIMPIPERES, MILEAGE_SIMPIPERES, 
    ELEVATION_SIMPIPERES, TEMPERATURE_SIMPIPERES, PRESSURE_SIMPIPERES, FLOW_SIMPIPERES, 
    LIQUID_SIMPIPERES
  </sql>
<!--      b.SIMULATIONID_REALSIMALL simulationidRealsimall,b.PIPENAME_SIMPIPERES pipenameSimpiperes,b.PIPEID_SIMPIPERES pipeidSimpiperes,b.MILEAGE_SIMPIPERES mileageSimpiperes,
      b.ELEVATION_SIMPIPERES elevationSimpiperes,b.TEMPERATURE_SIMPIPERES temperatureSimpiperes,b.PRESSURE_SIMPIPERES pressureSimpiperes,
      b.FLOW_SIMPIPERES flowSimpiperes,b.LIQUID_SIMPIPERES liquidSimpiperes-->
  <!--resultMap="BaseResultMap"  simulationid,jdbcType=BIGINT resultType="com.ywjs.model.entity.RealtimesimPipeResult"-->
  <select id="selectByCondition" resultMap="BaseResultMap"  >
    SELECT
      b.*
    from REALTIMESIM_RESULT_TBL a
    LEFT JOIN REALTIMESIM_PIPE_RESULT_TBL b
    on a.SIMULATIONID_REALSIMALL = b.SIMULATIONID_REALSIMALL
    where a.SIMULATIONID_REALSIM = #{simulationid,jdbcType=BIGINT}
    and TRUNC(a.REALTIME_SIM, 'mi') = TO_DATE(#{realtimedata,jdbcType=VARCHAR}, 'yyyy-mm-dd hh24:mi:ss')
    and b.PIPENAME_SIMPIPERES = #{name,jdbcType=VARCHAR}
  </select>

  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ywjs.model.entity.RealtimesimPipeResultExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from REALTIMESIM_PIPE_RESULT_TBL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.ywjs.model.entity.RealtimesimPipeResultExample" >
    delete from REALTIMESIM_PIPE_RESULT_TBL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ywjs.model.entity.RealtimesimPipeResult" >
    insert into REALTIMESIM_PIPE_RESULT_TBL (SIMULATIONID_REALSIMALL, PIPENAME_SIMPIPERES, 
      PIPEID_SIMPIPERES, MILEAGE_SIMPIPERES, ELEVATION_SIMPIPERES, 
      TEMPERATURE_SIMPIPERES, PRESSURE_SIMPIPERES, 
      FLOW_SIMPIPERES, LIQUID_SIMPIPERES)
    values (#{simulationidRealsimall,jdbcType=DECIMAL}, #{pipenameSimpiperes,jdbcType=VARCHAR}, 
      #{pipeidSimpiperes,jdbcType=VARCHAR}, #{mileageSimpiperes,jdbcType=DECIMAL}, #{elevationSimpiperes,jdbcType=DECIMAL}, 
      #{temperatureSimpiperes,jdbcType=DECIMAL}, #{pressureSimpiperes,jdbcType=DECIMAL}, 
      #{flowSimpiperes,jdbcType=DECIMAL}, #{liquidSimpiperes,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.ywjs.model.entity.RealtimesimPipeResult" >
    insert into REALTIMESIM_PIPE_RESULT_TBL
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="simulationidRealsimall != null" >
        SIMULATIONID_REALSIMALL,
      </if>
      <if test="pipenameSimpiperes != null" >
        PIPENAME_SIMPIPERES,
      </if>
      <if test="pipeidSimpiperes != null" >
        PIPEID_SIMPIPERES,
      </if>
      <if test="mileageSimpiperes != null" >
        MILEAGE_SIMPIPERES,
      </if>
      <if test="elevationSimpiperes != null" >
        ELEVATION_SIMPIPERES,
      </if>
      <if test="temperatureSimpiperes != null" >
        TEMPERATURE_SIMPIPERES,
      </if>
      <if test="pressureSimpiperes != null" >
        PRESSURE_SIMPIPERES,
      </if>
      <if test="flowSimpiperes != null" >
        FLOW_SIMPIPERES,
      </if>
      <if test="liquidSimpiperes != null" >
        LIQUID_SIMPIPERES,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="simulationidRealsimall != null" >
        #{simulationidRealsimall,jdbcType=DECIMAL},
      </if>
      <if test="pipenameSimpiperes != null" >
        #{pipenameSimpiperes,jdbcType=VARCHAR},
      </if>
      <if test="pipeidSimpiperes != null" >
        #{pipeidSimpiperes,jdbcType=VARCHAR},
      </if>
      <if test="mileageSimpiperes != null" >
        #{mileageSimpiperes,jdbcType=DECIMAL},
      </if>
      <if test="elevationSimpiperes != null" >
        #{elevationSimpiperes,jdbcType=DECIMAL},
      </if>
      <if test="temperatureSimpiperes != null" >
        #{temperatureSimpiperes,jdbcType=DECIMAL},
      </if>
      <if test="pressureSimpiperes != null" >
        #{pressureSimpiperes,jdbcType=DECIMAL},
      </if>
      <if test="flowSimpiperes != null" >
        #{flowSimpiperes,jdbcType=DECIMAL},
      </if>
      <if test="liquidSimpiperes != null" >
        #{liquidSimpiperes,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ywjs.model.entity.RealtimesimPipeResultExample" resultType="java.lang.Integer" >
    select count(*) from REALTIMESIM_PIPE_RESULT_TBL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update REALTIMESIM_PIPE_RESULT_TBL
    <set >
      <if test="record.simulationidRealsimall != null" >
        SIMULATIONID_REALSIMALL = #{record.simulationidRealsimall,jdbcType=DECIMAL},
      </if>
      <if test="record.pipenameSimpiperes != null" >
        PIPENAME_SIMPIPERES = #{record.pipenameSimpiperes,jdbcType=VARCHAR},
      </if>
      <if test="record.pipeidSimpiperes != null" >
        PIPEID_SIMPIPERES = #{record.pipeidSimpiperes,jdbcType=VARCHAR},
      </if>
      <if test="record.mileageSimpiperes != null" >
        MILEAGE_SIMPIPERES = #{record.mileageSimpiperes,jdbcType=DECIMAL},
      </if>
      <if test="record.elevationSimpiperes != null" >
        ELEVATION_SIMPIPERES = #{record.elevationSimpiperes,jdbcType=DECIMAL},
      </if>
      <if test="record.temperatureSimpiperes != null" >
        TEMPERATURE_SIMPIPERES = #{record.temperatureSimpiperes,jdbcType=DECIMAL},
      </if>
      <if test="record.pressureSimpiperes != null" >
        PRESSURE_SIMPIPERES = #{record.pressureSimpiperes,jdbcType=DECIMAL},
      </if>
      <if test="record.flowSimpiperes != null" >
        FLOW_SIMPIPERES = #{record.flowSimpiperes,jdbcType=DECIMAL},
      </if>
      <if test="record.liquidSimpiperes != null" >
        LIQUID_SIMPIPERES = #{record.liquidSimpiperes,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update REALTIMESIM_PIPE_RESULT_TBL
    set SIMULATIONID_REALSIMALL = #{record.simulationidRealsimall,jdbcType=DECIMAL},
      PIPENAME_SIMPIPERES = #{record.pipenameSimpiperes,jdbcType=VARCHAR},
      PIPEID_SIMPIPERES = #{record.pipeidSimpiperes,jdbcType=VARCHAR},
      MILEAGE_SIMPIPERES = #{record.mileageSimpiperes,jdbcType=DECIMAL},
      ELEVATION_SIMPIPERES = #{record.elevationSimpiperes,jdbcType=DECIMAL},
      TEMPERATURE_SIMPIPERES = #{record.temperatureSimpiperes,jdbcType=DECIMAL},
      PRESSURE_SIMPIPERES = #{record.pressureSimpiperes,jdbcType=DECIMAL},
      FLOW_SIMPIPERES = #{record.flowSimpiperes,jdbcType=DECIMAL},
      LIQUID_SIMPIPERES = #{record.liquidSimpiperes,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>