<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ywjs.mapper.ElementMapper" >
  <resultMap id="BaseResultMap" type="com.ywjs.model.entity.Element" >
    <id column="ELEMENTID_ELE" property="elementidEle" jdbcType="DECIMAL" />
    <result column="NODESTAR_ELE" property="nodestarEle" jdbcType="VARCHAR" />
    <result column="NODEEND_ELE" property="nodeendEle" jdbcType="VARCHAR" />
    <result column="STARX_ELE" property="starxEle" jdbcType="DECIMAL" />
    <result column="STARY_ELE" property="staryEle" jdbcType="DECIMAL" />
    <result column="PROJECTID_PROAFF" property="projectidProaff" jdbcType="DECIMAL" />
    <result column="LAYERID_ELE" property="layeridEle" jdbcType="VARCHAR" />
    <result column="ELEMENTREALNAME_ELE" property="elementrealnameEle" jdbcType="VARCHAR" />
    <result column="ELEMENTTYPE_ELE" property="elementtypeEle" jdbcType="VARCHAR" />
    <result column="ELEMENTISSTATE" property="elementisstate" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ELEMENTID_ELE, NODESTAR_ELE, NODEEND_ELE, STARX_ELE, STARY_ELE, PROJECTID_PROAFF, 
    LAYERID_ELE, ELEMENTREALNAME_ELE, ELEMENTTYPE_ELE, ELEMENTISSTATE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ywjs.model.entity.ElementExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ELEMENT_TBL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ELEMENT_TBL
    where ELEMENTID_ELE = #{elementidEle,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ELEMENT_TBL
    where ELEMENTID_ELE = #{elementidEle,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.ywjs.model.entity.ElementExample" >
    delete from ELEMENT_TBL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ywjs.model.entity.Element" >
    <!--order="BEFORE/AFTER"  -->
    <selectKey resultType="Integer" order="AFTER" keyProperty="elementidEle">
     	<!-- select ELEMENT_TBL_SEQ.nextval  from dual -->
     	select max(ELEMENTID_ELE) from ELEMENT_TBL
    </selectKey>
    insert into ELEMENT_TBL (ELEMENTID_ELE, NODESTAR_ELE, NODEEND_ELE, 
      STARX_ELE, STARY_ELE, PROJECTID_PROAFF, 
      LAYERID_ELE, ELEMENTREALNAME_ELE, ELEMENTTYPE_ELE, 
      ELEMENTISSTATE)
    values (#{elementidEle,jdbcType=DECIMAL}, #{nodestarEle,jdbcType=VARCHAR}, #{nodeendEle,jdbcType=VARCHAR}, 
      #{starxEle,jdbcType=DECIMAL}, #{staryEle,jdbcType=DECIMAL}, #{projectidProaff,jdbcType=DECIMAL}, 
      #{layeridEle,jdbcType=VARCHAR}, #{elementrealnameEle,jdbcType=VARCHAR}, #{elementtypeEle,jdbcType=VARCHAR}, 
      #{elementisstate,jdbcType=DECIMAL})
  </insert>
  
  	<!-- 批量插入 -->
	<insert id="insertBatch" parameterType="java.util.List" >
		insert into ELEMENT_TBL 
			(ELEMENTID_ELE, NODESTAR_ELE, NODEEND_ELE,  STARX_ELE, STARY_ELE, PROJECTID_PROAFF, 
		      LAYERID_ELE, ELEMENTREALNAME_ELE, ELEMENTTYPE_ELE, ELEMENTISSTATE)
		<foreach close=")" collection="list" item="item" index="index"
			open="(" separator="union all">
			select
				#{item.elementidEle,jdbcType=DECIMAL}, 
				#{item.nodestarEle,jdbcType=VARCHAR}, 
				#{item.nodeendEle,jdbcType=VARCHAR}, 
			      #{item.starxEle,jdbcType=DECIMAL}, 
			      #{item.staryEle,jdbcType=DECIMAL}, 
			      #{item.projectidProaff,jdbcType=DECIMAL}, 
			      #{item.layeridEle,jdbcType=VARCHAR}, 
			      #{item.elementrealnameEle,jdbcType=VARCHAR}, 
			      #{item.elementtypeEle,jdbcType=VARCHAR}, 
			      #{item.elementisstate,jdbcType=DECIMAL}
			from dual
		</foreach>
	</insert>
  
  <insert id="insertSelective" parameterType="com.ywjs.model.entity.Element" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 13 18:21:09 CST 2019.
    -->
    <selectKey resultType="Integer" order="AFTER" keyProperty="elementidEle">
     	<!-- select ELEMENT_TBL_SEQ.nextval  from dual -->
     	select max(ELEMENTID_ELE) from ELEMENT_TBL
    </selectKey>
    insert into ELEMENT_TBL
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="elementidEle != null" >
        ELEMENTID_ELE,
      </if>
      <if test="nodestarEle != null" >
        NODESTAR_ELE,
      </if>
      <if test="nodeendEle != null" >
        NODEEND_ELE,
      </if>
      <if test="starxEle != null" >
        STARX_ELE,
      </if>
      <if test="staryEle != null" >
        STARY_ELE,
      </if>
      <if test="projectidProaff != null" >
        PROJECTID_PROAFF,
      </if>
      <if test="layeridEle != null" >
        LAYERID_ELE,
      </if>
      <if test="elementrealnameEle != null" >
        ELEMENTREALNAME_ELE,
      </if>
      <if test="elementtypeEle != null" >
        ELEMENTTYPE_ELE,
      </if>
      <if test="elementisstate != null" >
        ELEMENTISSTATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="elementidEle != null" >
        #{elementidEle,jdbcType=DECIMAL},
      </if>
      <if test="nodestarEle != null" >
        #{nodestarEle,jdbcType=VARCHAR},
      </if>
      <if test="nodeendEle != null" >
        #{nodeendEle,jdbcType=VARCHAR},
      </if>
      <if test="starxEle != null" >
        #{starxEle,jdbcType=DECIMAL},
      </if>
      <if test="staryEle != null" >
        #{staryEle,jdbcType=DECIMAL},
      </if>
      <if test="projectidProaff != null" >
        #{projectidProaff,jdbcType=DECIMAL},
      </if>
      <if test="layeridEle != null" >
        #{layeridEle,jdbcType=VARCHAR},
      </if>
      <if test="elementrealnameEle != null" >
        #{elementrealnameEle,jdbcType=VARCHAR},
      </if>
      <if test="elementtypeEle != null" >
        #{elementtypeEle,jdbcType=VARCHAR},
      </if>
      <if test="elementisstate != null" >
        #{elementisstate,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ywjs.model.entity.ElementExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 13 18:21:09 CST 2019.
    -->
    select count(*) from ELEMENT_TBL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 13 18:21:09 CST 2019.
    -->
    update ELEMENT_TBL
    <set >
      <if test="record.elementidEle != null" >
        ELEMENTID_ELE = #{record.elementidEle,jdbcType=DECIMAL},
      </if>
      <if test="record.nodestarEle != null" >
        NODESTAR_ELE = #{record.nodestarEle,jdbcType=VARCHAR},
      </if>
      <if test="record.nodeendEle != null" >
        NODEEND_ELE = #{record.nodeendEle,jdbcType=VARCHAR},
      </if>
      <if test="record.starxEle != null" >
        STARX_ELE = #{record.starxEle,jdbcType=DECIMAL},
      </if>
      <if test="record.staryEle != null" >
        STARY_ELE = #{record.staryEle,jdbcType=DECIMAL},
      </if>
      <if test="record.projectidProaff != null" >
        PROJECTID_PROAFF = #{record.projectidProaff,jdbcType=DECIMAL},
      </if>
      <if test="record.layeridEle != null" >
        LAYERID_ELE = #{record.layeridEle,jdbcType=VARCHAR},
      </if>
      <if test="record.elementrealnameEle != null" >
        ELEMENTREALNAME_ELE = #{record.elementrealnameEle,jdbcType=VARCHAR},
      </if>
      <if test="record.elementtypeEle != null" >
        ELEMENTTYPE_ELE = #{record.elementtypeEle,jdbcType=VARCHAR},
      </if>
      <if test="record.elementisstate != null" >
        ELEMENTISSTATE = #{record.elementisstate,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 13 18:21:09 CST 2019.
    -->
    update ELEMENT_TBL
    set ELEMENTID_ELE = #{record.elementidEle,jdbcType=DECIMAL},
      NODESTAR_ELE = #{record.nodestarEle,jdbcType=VARCHAR},
      NODEEND_ELE = #{record.nodeendEle,jdbcType=VARCHAR},
      STARX_ELE = #{record.starxEle,jdbcType=DECIMAL},
      STARY_ELE = #{record.staryEle,jdbcType=DECIMAL},
      PROJECTID_PROAFF = #{record.projectidProaff,jdbcType=DECIMAL},
      LAYERID_ELE = #{record.layeridEle,jdbcType=VARCHAR},
      ELEMENTREALNAME_ELE = #{record.elementrealnameEle,jdbcType=VARCHAR},
      ELEMENTTYPE_ELE = #{record.elementtypeEle,jdbcType=VARCHAR},
      ELEMENTISSTATE = #{record.elementisstate,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ywjs.model.entity.Element" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 13 18:21:09 CST 2019.
    -->
    update ELEMENT_TBL
    <set >
      <if test="nodestarEle != null" >
        NODESTAR_ELE = #{nodestarEle,jdbcType=VARCHAR},
      </if>
      <if test="nodeendEle != null" >
        NODEEND_ELE = #{nodeendEle,jdbcType=VARCHAR},
      </if>
      <if test="starxEle != null" >
        STARX_ELE = #{starxEle,jdbcType=DECIMAL},
      </if>
      <if test="staryEle != null" >
        STARY_ELE = #{staryEle,jdbcType=DECIMAL},
      </if>
      <if test="projectidProaff != null" >
        PROJECTID_PROAFF = #{projectidProaff,jdbcType=DECIMAL},
      </if>
      <if test="layeridEle != null" >
        LAYERID_ELE = #{layeridEle,jdbcType=VARCHAR},
      </if>
      <if test="elementrealnameEle != null" >
        ELEMENTREALNAME_ELE = #{elementrealnameEle,jdbcType=VARCHAR},
      </if>
      <if test="elementtypeEle != null" >
        ELEMENTTYPE_ELE = #{elementtypeEle,jdbcType=VARCHAR},
      </if>
      <if test="elementisstate != null" >
        ELEMENTISSTATE = #{elementisstate,jdbcType=DECIMAL},
      </if>
    </set>
    where ELEMENTID_ELE = #{elementidEle,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ywjs.model.entity.Element" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 13 18:21:09 CST 2019.
    -->
    update ELEMENT_TBL
    set NODESTAR_ELE = #{nodestarEle,jdbcType=VARCHAR},
      NODEEND_ELE = #{nodeendEle,jdbcType=VARCHAR},
      STARX_ELE = #{starxEle,jdbcType=DECIMAL},
      STARY_ELE = #{staryEle,jdbcType=DECIMAL},
      PROJECTID_PROAFF = #{projectidProaff,jdbcType=DECIMAL},
      LAYERID_ELE = #{layeridEle,jdbcType=VARCHAR},
      ELEMENTREALNAME_ELE = #{elementrealnameEle,jdbcType=VARCHAR},
      ELEMENTTYPE_ELE = #{elementtypeEle,jdbcType=VARCHAR},
      ELEMENTISSTATE = #{elementisstate,jdbcType=DECIMAL}
    where ELEMENTID_ELE = #{elementidEle,jdbcType=DECIMAL}
  </update>
</mapper>